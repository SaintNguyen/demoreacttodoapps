{"version":3,"sources":["components/TodoList.js","modals/CreateTask.js","modals/EditTask.js","components/Card.js","pages/Dashboard.jsx","images/XuanHuu.jpg","pages/About.jsx","images/bot_image.jpg","pages/Comment.jsx","pages/Analytics.jsx","pages/Product.jsx","pages/ProductList.jsx","App.js","reportWebVitals.js","index.js"],"names":["TodoList","children","useState","modal","setModal","setTaskList","isOpen","setIsOpen","useEffect","arr","localStorage","getItem","obj","JSON","parse","menuItem","path","name","icon","className","style","width","display","marginLeft","onClick","map","item","index","to","activeclassName","marginTop","CreateTaskPopup","toggle","save","taskName","setTaskName","description","setDescription","handleChange","e","target","value","Modal","ModalHeader","ModalBody","type","onChange","rows","ModalFooter","Button","role","preventDefault","taskObj","color","EditTaskPopup","updateTask","Name","Description","tempObj","Card","deleteTask","updateListArray","colors","primaryColor","secondaryColor","class","data-aos","data-aos-duration","row","EditTask","Dashboard","taskList","tempList","splice","setItem","stringify","window","location","reload","CreateTask","push","About","id","href","aria-hidden","src","huunguyen","alt","Comment","humanMessage","useRef","botmessage","input","date","Date","hours","getHours","seconds","getSeconds","day","getDay","month","getMonth","year","getFullYear","dateTime","onLoad","isActive","status","document","querySelector","innerHTML","image","ref","placeholder","inputRef","current","getHumanMessage","getBotMessage","RegExp","test","innerText","setTimeout","Analytics","Product","ProductList","App","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0c2f842a.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {\n    FaTh,\n    FaBars,\n    FaUserAlt,\n    FaRegChartBar,\n    FaCommentAlt,\n    FaShoppingBag,\n    FaThList\n}from \"react-icons/fa\";\nimport { NavLink } from 'react-router-dom';\n\nconst TodoList = ({children}) => {\n    const [modal, setModal] = useState(false);\n    const [taskList, setTaskList] = useState([])\n    const[isOpen ,setIsOpen] = useState(false);\n    \n    useEffect(() => {\n        let arr = localStorage.getItem(\"taskList\")\n       \n        if(arr){\n            let obj = JSON.parse(arr)\n            setTaskList(obj)\n        }\n    }, [])\n\n    const toggle = () => {\n        setModal(!modal);\n        setIsOpen (!isOpen);\n    }\n\n    const menuItem=[\n        {\n            path:\"/\",\n            name:\"Dashboard\",\n            icon:<FaTh/>\n        },\n        {\n            path:\"/about\",\n            name:\"About\",\n            icon:<FaUserAlt/>\n        },\n        {\n            path:\"/comment\",\n            name:\"Comment\",\n            icon:<FaCommentAlt/>\n        },\n        {\n            path:\"/analytics\",\n            name:\"Analytics\",\n            icon:<FaRegChartBar/>\n        },\n        {\n            path:\"/product\",\n            name:\"Product\",\n            icon:<FaShoppingBag/>\n        },\n        {\n            path:\"/productList\",\n            name:\"Product List\",\n            icon:<FaThList/>\n        }\n    ] \n\n    return (\n        <>\n        <div className=\"container\">\n           <div style={{width: isOpen ? \"200px\" : \"50px\"}} className=\"sidebar\">\n               <div className=\"top_section\">\n                   <h1 style={{display: isOpen ? \"block\" : \"none\"}} className=\"gradient-text\">TODO</h1>\n                   <div style={{marginLeft: isOpen ? \"-2px\" : \"-2px\"}} className=\"bars\">\n                       <FaBars onClick={toggle}/>\n                   </div>\n               </div>\n               {\n                   menuItem.map((item, index)=>(\n                       <NavLink to={item.path} key={index} className=\"link\" activeclassName=\"active\">\n                           <div className=\"icon\">{item.icon}</div>\n                           <h5 style={{display: isOpen ? \"block\" : \"none\",marginTop:isOpen ?\"-15px\":\"-15px\"}} className=\"gradient-text\">{item.name}</h5>\n                       </NavLink>\n                   ))\n               }\n           </div>\n           <main>{children}</main>\n        </div>\n        </>\n    );\n};\n\nexport default TodoList;","import React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst CreateTaskPopup = ({modal, toggle, save}) => {\r\n    const [taskName, setTaskName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        \r\n        const {name, value} = e.target\r\n\r\n        if(name === \"taskName\"){\r\n            setTaskName(value)\r\n        }else{\r\n            setDescription(value)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const handleSave = (e) => {\r\n        e.preventDefault()\r\n        let taskObj = {}\r\n        taskObj[\"Name\"] = taskName\r\n        taskObj[\"Description\"] = description\r\n        save(taskObj)\r\n\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n            <ModalHeader style={{\"background-color\": \"#000\"}} toggle={toggle}><h2 className=\"gradient-text\">Create Task</h2></ModalHeader>\r\n            <ModalBody style={{\"background-color\": \"#000\"}}>\r\n            \r\n                    <div className = \"form-group\">\r\n                        <label className=\"gradient-text\"><h7>Task Name</h7></label>\r\n                        <input type=\"text\" style={{\"font-family\": \"Archivo Black, sans-serif\", \"font-size\": \"20px\"}} className = \"form-control\" value = {taskName} onChange = {handleChange} name = \"taskName\"/>\r\n                    </div>\r\n                    <div className = \"form-group\">\r\n                        <label className=\"gradient-text\"><h7>Description</h7></label>\r\n                        <textarea rows = \"5\" style={{\"font-family\": \"Great Vibes, cursive\", \"font-size\": \"22px\"}} className = \"form-control\" value = {description} onChange = {handleChange} name = \"description\"></textarea>\r\n                    </div>\r\n                \r\n            </ModalBody>\r\n            <ModalFooter>\r\n            <Button className = \"button-85\" role=\"button\" onClick={handleSave}><h6 className=\"gradient-text\">Create</h6></Button>{' '}\r\n            <Button color=\"secondary\" onClick={toggle}><h6>Cancel</h6></Button>\r\n            </ModalFooter>\r\n      </Modal>\r\n    );\r\n};\r\n\r\nexport default CreateTaskPopup;","import React, { useState , useEffect} from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nconst EditTaskPopup = ({modal, toggle, updateTask, taskObj}) => {\n    const [taskName, setTaskName] = useState('');\n    const [description, setDescription] = useState('');\n\n    const handleChange = (e) => {\n        \n        const {name, value} = e.target\n\n        if(name === \"taskName\"){\n            setTaskName(value)\n        }else{\n            setDescription(value)\n        }\n\n\n    }\n\n    useEffect(() => {\n        setTaskName(taskObj.Name)\n        setDescription(taskObj.Description)\n    },[])\n\n    const handleUpdate = (e) => {\n        e.preventDefault();\n        let tempObj = {}\n        tempObj['Name'] = taskName\n        tempObj['Description'] = description\n        updateTask(tempObj)\n    }\n\n    return (\n        <Modal isOpen={modal} toggle={toggle}>\n            <ModalHeader style={{\"background-color\": \"#000\"}} toggle={toggle}><h2 className=\"gradient-text\">Update Task</h2></ModalHeader>\n            <ModalBody style={{\"background-color\": \"#000\"}}>\n            \n                    <div className = \"form-group\">\n                        <label className=\"gradient-text\"><h7>Task Name</h7></label>\n                        <input type=\"text\" style={{\"font-family\": \"Archivo Black, sans-serif\", \"font-size\": \"20px\"}} className = \"form-control\" value = {taskName} onChange = {handleChange} name = \"taskName\"/>\n                    </div>\n                    <div className = \"form-group\">\n                        <label className=\"gradient-text\"><h7>Description</h7></label>\n                        <textarea rows = \"5\" style={{\"font-family\": \"Great Vibes, cursive\", \"font-size\": \"22px\"}} className = \"form-control\" value = {description} onChange = {handleChange} name = \"description\"></textarea>\n                    </div>\n                \n            </ModalBody>\n            <ModalFooter>\n            <Button className = \"button-85\" role=\"button\" onClick={handleUpdate}><h6 className=\"gradient-text\">Update</h6></Button>{' '}\n            <Button color=\"secondary\" onClick={toggle}><h6>Cancel</h6></Button>\n            </ModalFooter>\n      </Modal>\n    );\n};\n\nexport default EditTaskPopup;","import React, {useState} from 'react';\nimport EditTask from '../modals/EditTask'\n\nconst Card = ({taskObj, index, deleteTask, updateListArray}) => {\n    const [modal, setModal] = useState(false);\n\n    const colors = [\n        {\n            primaryColor : \"#5D93E1\",\n            secondaryColor : \"#ECF3FC\"\n        },\n        {\n            primaryColor : \"#F9D288\",\n            secondaryColor : \"#FEFAF1\"\n        },\n        {\n            primaryColor : \"#5DC250\",\n            secondaryColor : \"#F2FAF1\"\n        },\n        {\n            primaryColor : \"#F48687\",\n            secondaryColor : \"#FDF1F1\"\n        },\n        {\n            primaryColor : \"#B964F7\",\n            secondaryColor : \"#F3F0FD\"\n        }\n    ]\n\n    const toggle = () => {\n        setModal(!modal);\n    }\n\n    const updateTask = (obj) => {\n        updateListArray(obj, index)\n    }\n\n    const handleDelete = () => {\n        deleteTask(index)\n    }\n\n    return (\n        <div class = \"card-wrapper mr-5\" data-aos=\"zoom-in-right\" data-aos-duration=\"1200\">\n            <div class = \"card-top\" style={{\"background-color\": colors[index%5].primaryColor}}></div>\n            <div class = \"task-holder\">\n                <span class = \"card-header\" style={{\"background-color\": colors[index%5].secondaryColor, \"border-radius\": \"10px\"}}>{taskObj.Name}</span>\n                <textarea row= \"5\" className = \"mt-3\" style={{\"color\": colors[index%5].primaryColor}}>{taskObj.Description}</textarea>\n\n                <div style={{\"position\": \"absolute\", \"right\" : \"20px\", \"bottom\" : \"20px\"}}>\n                    <i class = \"far fa-edit mr-3\" style={{\"color\" : colors[index%5].primaryColor, \"cursor\" : \"pointer\"}} onClick = {() => setModal(true)}></i>\n                    <i class=\"fas fa-trash-alt\" style = {{\"color\" : colors[index%5].primaryColor, \"cursor\" : \"pointer\"}} onClick = {handleDelete}></i>\n                </div>\n        </div>\n        <EditTask modal = {modal} toggle = {toggle} updateTask = {updateTask} taskObj = {taskObj}/>\n        </div>\n    );\n};\n\nexport default Card;","import React, {useEffect, useState} from 'react';\nimport CreateTask from '../modals/CreateTask'\nimport Card from '../components/Card';\n\nconst Dashboard = () => {\n    const [modal, setModal] = useState(false);\n    const [taskList, setTaskList] = useState([])\n    useEffect(() => {\n        let arr = localStorage.getItem(\"taskList\")\n       \n        if(arr){\n            let obj = JSON.parse(arr)\n            setTaskList(obj)\n        }\n    }, [])\n\n\n    const deleteTask = (index) => {\n        let tempList = taskList\n        tempList.splice(index, 1)\n        localStorage.setItem(\"taskList\", JSON.stringify(tempList))\n        setTaskList(tempList)\n        window.location.reload()\n    }\n\n    const updateListArray = (obj, index) => {\n        let tempList = taskList\n        tempList[index] = obj\n        localStorage.setItem(\"taskList\", JSON.stringify(tempList))\n        setTaskList(tempList)\n        window.location.reload()\n    }\n\n    const toggle = () => {\n        setModal(!modal);\n    }\n\n    const saveTask = (taskObj) => {\n        let tempList = taskList\n        tempList.push(taskObj)\n        localStorage.setItem(\"taskList\", JSON.stringify(tempList))\n        setTaskList(taskList)\n        setModal(false)\n    }\n\n    return (\n        <>\n        <div className = \"header1 text-center\">\n        <h2 className=\"gradient-text\">TODO LIST</h2>\n            <button className = \"button-85\" role=\"button\" onClick = {() => setModal(true)} ><h6 className=\"gradient-text\">Create Task</h6></button>\n        </div>\n        <div className = \"task-container\">\n        {taskList && taskList.map((obj , index) => <Card taskObj = {obj} index = {index} deleteTask = {deleteTask} updateListArray = {updateListArray}/> )}\n        </div>\n        <CreateTask toggle = {toggle} modal = {modal} save = {saveTask}/>\n        </>\n    );\n};\n\nexport default Dashboard;","export default __webpack_public_path__ + \"static/media/XuanHuu.6c85c2c4.jpg\";","import React from 'react';\nimport huunguyen from \"../images/XuanHuu.jpg\"\nconst About = () => {\n    return (\n        <header>\n            <nav class=\"navbar navbar-expand-sm navbar-light fixed-top\" id=\"navbar\">\n      <div class=\"collapse navbar-collapse\">\n        <ul class=\"navbar-nav\">\n          <li class=\"nav-item\">\n            <h6><a href=\"https://www.facebook.com/saintnguyen1112\" class=\"gradient-text\"><i class=\"fab fa-facebook-f\" aria-hidden=\"true\" style={{'font-size' : '18px' }}></i>Facebook</a></h6>\n          </li>\n\t\t  <li class=\"nav-item\">\n            <h6><a href=\"https://www.instagram.com/xn__huung/\" class=\"gradient-text\"><i class=\"fab fa-instagram\" aria-hidden=\"true\" style={{'font-size' : '18px' }}></i>Instagram</a></h6>\n          </li>\n\t\t  <li class=\"nav-item\">\n            <h6><a href=\"https://www.twitch.tv/saint_nguyen\" class=\"gradient-text\"><i class=\"fa-brands fa-twitch\" aria-hidden=\"true\" style={{'font-size' : '18px' }}></i>Twitch</a></h6>\n          </li>\n          \n          \n        </ul>\n      </div>\n    </nav>\n    <h1 class=\"aos-item\" ><b>Nguyễn Xuân Hữu</b></h1>\n      <div id=\"line\"></div>\n      <h3 class=\"aos-item\" >SV Đại học Sư phạm TP. Hồ Chí Minh</h3>\n\n      <div class=\" presentation\">\n      <div class=\"col-6 col-md-3 infos\">\n      <h5><i class=\"fa fa-user\"></i> 20 Tuổi</h5>\n            <h5><i class=\"fa fa-compass\"></i> Việt Nam</h5>\n\t\t\t<h5><i class=\"fa fa-phone\"></i> +84: 0393942398</h5>\n\t\t\t<h5><i class=\"fa fa-envelope-open\"></i> nguyenxuanhuu12c3@gmail.com</h5>\t\t\n      </div>\n      <div class=\"d-none d-md-block col-md-6\">\n            <h5 class=\"typed\">Họ tên : Nguyễn Xuân Hữu</h5> \n            <h5 class=\"typed\"> Ngày Sinh : ngày 11 tháng 12 năm 2002</h5>\n            <h5 class=\"typed\">MSSV : 46 . 01 . 104 . 064</h5>\n            <h5 class=\"typed\">Địa chỉ : Quận 12 , TP. Hồ Chí Minh . Hiện tại là sinh viên năm 3 khoa công nghệ thông tin của trường đại học Sư phạm TP.Hồ Chí Minh .</h5>\n          </div>\n          <div class=\"col-6 col-md-3 photo\">\n          <img src={huunguyen} alt=\"huu\"/>\n          </div>\n      </div>\n\n        </header>\n    );\n};\n\nexport default About;","export default __webpack_public_path__ + \"static/media/bot_image.2cee8696.jpg\";","import React from 'react';\nimport image from \"../images/bot_image.jpg\";\nimport { useState, useRef } from \"react\";\nfunction Comment() {\n    const humanMessage = useRef();\n  const botmessage = useRef();\n  const input = useRef();\n\n  const date = new Date();\n  const hours = date.getHours();\n  const seconds = date.getSeconds();\n  const day = date.getDay();\n  const month = date.getMonth();\n  const year = date.getFullYear();\n\n  const days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n  const [time, setTime] = useState(`${hours}:${seconds}`); //using the useState hook to get the data from the local time and set it to the time variable\n  const [dateTime, setDateTime] = useState(\n    `${days[day]}, ${months[month]} ${year}`\n  ); //using the useState hook to get the data from the local date and set it to the dateTime variable\n\n  const checkStatus = (e) => {\n    let isActive = true;\n    if (dateTime === \"Thursday, Aug 13 2022\") {\n      //if the dateTime is Thursday, 13 Aug 2022, the bot will be inactive\n      isActive = false;\n    }\n    const status = document.querySelector(\".status\");\n    // selecting the status class\n    if (isActive === true) {\n      //if the bot is active\n      status.innerHTML = \"Active\";\n      status.style.color = \"green\";\n    } else {\n      status.innerHTML = \"Not Active\";\n      status.style.color = \"red\";\n    }\n  };\n  const handleInput = () => {\n    const botMessage = document.querySelector(\"#message1\");\n    const userMessage = document.querySelector(\"#message2\");\n    const inputRef = input.current;\n    const getHumanMessage = humanMessage.current;\n    const getBotMessage = botmessage.current;\n\n    let badwords = [\"fuck|bad|stupid|useless|bitch|crazy|nonsense\"];\n    let words = new RegExp(badwords);\n    if (words.test(document.querySelector(\"#input\").value)) {\n      // if the input contains bad words\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"Please do not use bad words\"; // display the message\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n    let welcome = [\n      \"hi|hello|Hello|hey|sup|yo|wassup|whats up|howdy|greetings|good morning|good afternoon|good evening\",\n    ];\n    let words2 = new RegExp(welcome);\n    if (words2.test(document.querySelector(\"#input\").value)) {\n      const status = document.querySelector(\".status\");\n      // if the input contains welcome words\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"Hello There how are you doing today?\"; // display the message\n        status.innerText = \"Active\";\n        status.style.color = \"green\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n    let bye = [\"bye|Bye|goodbye|see you later|cya|goodnight|goodbye\"];\n    let words3 = new RegExp(bye);\n    if (words3.test(document.querySelector(\"#input\").value)) {\n      const status = document.querySelector(\".status\");\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"Bye, have a nice day\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n      setTimeout(() => {\n        status.innerText = \"Not active\";\n        status.style.color = \"red\";\n      }, 5000);\n    }\n    let thanks = [\n      \"Thanks|thanks|thank you|thank you very much|Thank you very much\",\n    ];\n    let words4 = new RegExp(thanks);\n    if (words4.test(document.querySelector(\"#input\").value)) {\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"You are welcome\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n    let how = [\n      \"How are you|how are you doing|how are you doing today|how are you doing today|How are you|how are you\",\n    ];\n    let words5 = new RegExp(how);\n    if (words5.test(document.querySelector(\"#input\").value)) {\n      const status = document.querySelector(\".status\");\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"I am fine, thank you\";\n        status.innerText = \"Active\";\n        status.style.color = \"green\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n    let good = [\n      \"That's good|Sound nice|that sounds awesome|that sounds great|Great|great|sounds great|that's sounds good|Nice|nice\",\n    ];\n    let words6 = new RegExp(good);\n    if (words6.test(document.querySelector(\"#input\").value)) {\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"😁\";\n        inputRef.value = \"\"; // clear the input\n      }, 1000);\n    }\n\n    let response = [\n      \"I'm fine|I am fine|I am fine today|I am fine today|i'm fine|i'm great|I'm fine|I'm great|I'm good|i'm good|great|Great\",\n    ];\n    let words7 = new RegExp(response);\n    if (words7.test(document.querySelector(\"#input\").value)) {\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"That is good\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n\n    let nameAsk = [\n      \"What's your name|what's your name|What is your name|what is your name\",\n    ];\n    let words8 = new RegExp(nameAsk);\n    if (words8.test(document.querySelector(\"#input\").value)) {\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"My name is Bot. What support do you need from me ?\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n\n    let owner = [\n      \"Who is the owner|who is the owner|Who is the owner of this bot|who is the owner of this bot|Who made you|who made you|Who is your maker|Who made you|who is your maker|who is your owner|Who is your owner\",\n    ];\n    let words9 = new RegExp(owner);\n    if (words9.test(document.querySelector(\"#input\").value)) {\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"The owner of this bot is Treasure\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n\n    let owner2 = [\n      \"Who's Treasure|who's Treasure|Who is Treasure|who is Treasure\",\n    ];\n    let words10 = new RegExp(owner2);\n    if (words10.test(document.querySelector(\"#input\").value)) {\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText =\n          \"Treasure is a programmer based on ReactJS and NodeJS he is the owner of a youtube channel called Creative Tutorials\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n\n    let ageAsk = [\n      \"What's your age|what's your age|What is your age|what is your age|How old are you|how old are you\",\n    ]; //adding the age-question\n    let words11 = new RegExp(ageAsk);\n    if (words11.test(document.querySelector(\"#input\").value)) {\n      // if the input contains some question\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"I am 1 year old\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n    getHumanMessage.innerText = inputRef.value; // display the message\n  };\n  return (\n    <div className=\"App1\" onLoad={checkStatus}>\n      <div className=\"wrapper\">\n        <div className=\"content\">\n        <div className = \"header1 text-center\">\n        <h2 className=\"gradient-text\">PLESE MESSAGE ME 😁! </h2></div>\n          <div className=\"header\">\n            <div className=\"img\">\n              <img src={image} alt=\"\" />\n            </div>\n            <div className=\"right\">\n              <div className=\"name\">ChatBot</div>\n              <div className=\"status\">Active</div>\n            </div>\n          </div>\n          <div className=\"main\">\n            <div className=\"main_content\">\n              <div className=\"messages\">\n                <div\n                  className=\"bot-message\"\n                  id=\"message1\"\n                  ref={botmessage}\n                ></div>\n                <div\n                  className=\"human-message\"\n                  id=\"message2\"\n                  ref={humanMessage}\n                ></div>\n              </div>\n            </div>\n          </div>\n          <div className=\"bottom\">\n            <div className=\"btm\">\n              <div className=\"input\">\n                <input\n                  type=\"text\"\n                  id=\"input\"\n                  placeholder=\"Enter your message\"\n                  ref={input}\n                />\n              </div>\n              <div className=\"btn\">\n                <button onClick={handleInput}>\n                  <i className=\"fas fa-paper-plane\"></i>Send\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Comment;","import React from 'react';\n\nconst Analytics = () => {\n    return (\n        <div>\n            <h1>Analytics page</h1>\n        </div>\n    );\n};\n\nexport default Analytics;","import React from 'react';\n\nconst Product = () => {\n    return (\n        <div>\n            <h1>product page</h1>\n        </div>\n    );\n};\n\nexport default Product;","import React from 'react';\n\nconst ProductList = () => {\n    return (\n        <div>\n            <h1>product list page</h1>\n        </div>\n    );\n};\n\nexport default ProductList;","import './App.css';\nimport TodoList from './components/TodoList'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'font-awesome/css/font-awesome.min.css'\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport Dashboard from './pages/Dashboard';\nimport About from './pages/About.jsx';\nimport Comment from './pages/Comment.jsx';\nimport Analytics from './pages/Analytics.jsx';\nimport Product from './pages/Product.jsx';\nimport ProductList from './pages/ProductList.jsx';\nfunction App () {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n      <TodoList>\n      <Routes>\n      <Route path=\"/\" element={<Dashboard />} />\n          <Route path=\"/dashboard\" element={<Dashboard />} />\n          <Route path=\"/about\" element={<About />} />\n          <Route path=\"/comment\" element={<Comment />} />\n          <Route path=\"/analytics\" element={<Analytics />} />\n          <Route path=\"/product\" element={<Product />} />\n          <Route path=\"/productList\" element={<ProductList />} />\n      </Routes>\n      </TodoList>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}